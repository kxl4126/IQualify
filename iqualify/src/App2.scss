:root {
  --white-color: hsl(240, 56%, 98%);
  --black-color: #1a1e23;
}

.loader {
  --loader-width: 4rem;

  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: var(--loader-width);
  height: var(--loader-width);
  text-align: center;

  &::before {
    position: absolute;
    content: "";
    width: 100%;
    height: 100%;
    background: var(--black-color);
    border-radius: 50%;
    animation: scale-bounce 1.5s ease-in-out both infinite;
  }

  .spinner {
    position: absolute;
    width: calc(var(--loader-width) * 0.7);
    fill: none;
    animation: spin 2s linear both infinite;
    display: block;
    margin: auto;
    circle {
      stroke: white;
      stroke-width: 2px;
      stroke-linecap: round;
      animation: stroke-dash 1.5s ease-in-out both infinite;
    }
  }
}

@keyframes stroke-dash {
  0% {
    stroke-dasharray: 1, 200;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 90, 200;
    stroke-dashoffset: -35px;
  }

  100% {
    stroke-dasharray: 1, 200;
    stroke-dashoffset: -125px;
  }
}

@keyframes spin {
  from {
    transform: rotate(0);
  }

  to {
    transform: rotate(1turn);
  }
}

@keyframes scale-bounce {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.2);
  }

  100% {
    transform: scale(1);
  }
}

$yellow: rgb(78, 4, 226);
$blue: rgb(46, 0, 186);
$pink: rgb(17, 69, 255);

$duration: 1000;

@function randomNum($min, $max) {
  $rand: random();
  $randomNum: $min + floor($rand * (($max - $min) + 1));

  @return $randomNum;
}

.icon {
  font-size: 32px;
  font-weight: bold;
  letter-spacing: 32px;
  position: relative;
}

.confetti {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  width: 100%;
  overflow: hidden;
}

.confetti-piece {
  position: absolute;
  width: 8px;
  height: 16px;
  background: $yellow;
  top: 0;
  opacity: 0;

  @for $i from 1 through 13 {
    &:nth-child(#{$i}) {
      left: $i * 7%;
      transform: rotate(#{randomNum(-80, 80)}deg);
      animation: makeItRain $duration * 1ms infinite ease-out;
      animation-delay: #{randomNum(0, $duration * 0.5)}ms;
      animation-duration: #{randomNum($duration * 0.7, $duration * 1.2)}ms;
    }
  }

  &:nth-child(odd) {
    background: $blue;
  }

  &:nth-child(even) {
    z-index: 1;
  }

  &:nth-child(4n) {
    width: 5px;
    height: 12px;
    animation-duration: $duration * 2ms;
  }

  &:nth-child(3n) {
    width: 3px;
    height: 10px;
    animation-duration: $duration * 2.5ms;
    animation-delay: $duration * 1ms;
  }

  &:nth-child(4n-7) {
    background: $pink;
  }
}

@keyframes makeItRain {
  from {
    opacity: 0;
  }

  50% {
    opacity: 1;
  }

  to {
    transform: translateY(200px);
  }
}

$col1: rgb(28, 209, 59);
$col2: #ffffff;
$col3: rgb(28, 170, 59);
$col4: rgb(28, 255, 59);
$col5: rgb(28, 230, 59);

html,
body {
  margin: 0px;
  padding: 0px;
}

#col_tog {
  display: inline-block;
  font-weight: 600;
  border-radius: 500px;
  padding: 8px 20px;
  margin: 5px;
  cursor: pointer;
  transition: 200ms ease-in-out;
}

#gfol_wrap {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

#bg {
  position: fixed;
  width: 100%;
  height: 100%;
  transition: 150ms ease-in-out;
  &.light {
    background: $col2;

    & .gfol_c {
      background: $col1;
      border: 2px solid $col2;
    }

    & #col_tog {
      background: $col1;
      color: $col2;
    }
  }
  &.dark {
    background: $col1;

    & .gfol_c {
      background: $col2;
      border: 2px solid $col1;
    }

    & #col_tog {
      background: $col2;
      color: $col1;
    }
  }
}

#bg.dark,
#bg.light {
  & .gfol_c {
    display: inline-block;
    border-radius: 100%;
    position: absolute;
    transform: translate(250%, -50%);
    animation: gfol_a 2.3s cubic-bezier(0.8, 0, 0.2, 1) infinite;

    &.gfol_c7 {
      /* bot mid */
      top: 20px;
      left: 0px;
      height: 49px;
      width: 49px;
      background: $col5;
    }
    &.gfol_c8 {
      /* bot right */
      top: 23px;
      left: 34px;
      height: 40px;
      width: 40px;
    }
    &.gfol_c9 {
      /* bot left */
      top: 20px;
      left: -37px;
      height: 36px;
      width: 36px;
      background: $col3;
    }
    &.gfol_c10 {
      /* top left */
      top: -8px;
      left: -16px;
      height: 33px;
      width: 33px;
    }
    &.gfol_c11 {
      /* top right */
      top: -5px;
      left: 17px;
      height: 36px;
      width: 36px;
      background: $col3;
    }
    &.gfol_c2 {
      top: -2px;
      left: 38px;
      height: 20px;
      width: 20px;
      background: $col3;
    }
    &.gfol_c3 {
      top: -24px;
      left: -3px;
      height: 25px;
      width: 25px;
      background: $col4;
    }
    &.gfol_c4 {
      top: 27px;
      left: 55px;
      height: 29px;
      width: 29px;
      background: $col4;
    }
    &.gfol_c5 {
      top: 30px;
      left: -52px;
      height: 28px;
      width: 28px;
      background: $col5;
    }
    &.gfol_c6 {
      top: 0px;
      left: -36px;
      height: 18px;
      width: 18px;
      background: $col3;
    }
    &.gfol_c1 {
      top: 30px;
      left: 73px;
      height: 18px;
      width: 18px;
      background: $col5;
    }
    &.gfol_c12 {
      top: 34px;
      left: -24px;
      height: 20px;
      width: 20px;
    }
  }
}

@keyframes gfol_a {
  0% {
    transform: translate(250%, -50%) scale(0);
    opacity: 0;
  }
  50% {
    transform: translate(-50%, -50%) scale(1);
    opacity: 1;
  }
  100% {
    transform: translate(-350%, -50%) scale(0);
    opacity: 0;
  }
}

body {
  background-color: #ffc650;
  text-align: center;
}

form {
  background-color: #ffc650;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 550px;
  height: 270px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
}

/* radio */
fieldset {
  width: 100%;
  text-align: center;
}

input[type="radio"] {
  display: none;
  + label {
    color: white;
    font-weight: bold;
    font-size: 1rem;
    cursor: pointer;
    user-select: none;
    padding-left: 20px;
    padding-right: 20px;
    &::before {
      transition: all 250ms cubic-bezier(0.4, 0.25, 0.3, 1);
      content: "";
      width: 30px;
      height: 30px;
      border-radius: 50%;
      background-color: white;
      border: 0px solid white;
      font-size: 0;
      position: absolute;
      bottom: 275%;
      left: 50%;
      transform: translate(-50%, 50%);
    }

    &::after {
      transition: all 250ms cubic-bezier(0.4, 0.25, 0.3, 1);
      content: "";
      width: 0;
      height: 0;
      border-radius: 50%;
      background-color: white;
      position: absolute;
      bottom: 275%;
      left: 50%;
      transform: translate(-50%, 50%);
    }
  }
  &:checked + label {
    &::before {
      background-color: transparent;
      width: 40px;
      height: 40px;
      border-width: 2px;
    }

    &::after {
      width: 30px;
      height: 30px;
    }
  }
}

/* input */
section.input-container {
  label {
    position: relative;
    display: block;
    input {
      display: block;
      padding: 20px;
      width: 300px;
      margin-bottom: 10px;
      outline: none;
      transition: all 0.2s ease-in-out;
      background-color: white;
      font-weight: bold;
      color: #ff7975;
      &::placeholder {
        transition: all 0.2s ease-in-out;
        color: #d3d3d3;
        font-weight: bold;
      }
      &:focus,
      &.populated {
        padding-top: 28px;
        padding-bottom: 12px;
        &::placeholder {
          color: transparent;
        }
        & + span {
          opacity: 1;
          top: 10px;
        }
      }
    }
    span {
      font-size: 0.8rem;
      color: #a9a9a9;
      position: absolute;
      top: 0px;
      left: 20px;
      opacity: 0;
      transition: all 0.2s ease-in-out;
    }
  }
}
